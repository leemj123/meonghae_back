plugins {
	id 'java'
	id 'org.springframework.boot' version '2.7.8'
	id 'io.spring.dependency-management' version '1.1.0'
	id 'maven-publish'
	id 'com.diffplug.spotless' version '6.8.0'
}

group = 'com.meonghae'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	maven { url 'https://repo.spring.io/milestone' }
	maven { url 'https://repo.spring.io/snapshot' }
	maven { url "https://www.datanucleus.org/downloads/maven2/"}
}

ext {
	set('springCloudVersion', "2021.0.5")
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation 'org.springframework.cloud:spring-cloud-starter-gateway'
	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
	implementation 'org.springframework.cloud:spring-cloud-starter-config'
	implementation 'org.springframework.cloud:spring-cloud-starter-bootstrap'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.cloud:spring-cloud-starter-bus-amqp'
	implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation group: 'org.springframework.data', name: 'spring-data-redis', version: '2.7.3'
	implementation group: 'io.springfox', name: 'springfox-boot-starter', version: '3.0.0'
	implementation('io.lettuce:lettuce-core:6.2.3.RELEASE')
	implementation 'javax.servlet:javax.servlet-api:4.0.1'
	implementation 'com.github.ulisesbocchio:jasypt-spring-boot-starter:3.0.5'
//	implementation 'io.micrometer:micrometer-registry-prometheus'
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'io.projectreactor:reactor-test'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

tasks.named('test') {
	useJUnitPlatform()
}
springBoot {
	buildInfo()
}
publishing {
	publications {
		mavenJava(MavenPublication) {
			artifact bootJar
		}
	}
}
spotless {

	format 'misc', {
		// define the files to apply 'misc' to
		target '*.gradle', '*.md', '.gitignore'

		// define the steps to apply to those files
		trimTrailingWhitespace()
		indentWithTabs() // or spaces. Takes an integer argument if you don't like 4
		endWithNewline()
	}

	java {// to customize, go to https://github.com/diffplug/spotless/tree/main/plugin-gradle#java

		target 'src/*/java/**/*.java'

		// Use the default importOrder configuration
		importOrder()

		// Clean up
		removeUnusedImports()

		// Apply google-java-format formatter
		googleJavaFormat()
	}
}